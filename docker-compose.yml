version: "3.9"

services:
  proxy-request:
    build:
      context: ./services/proxy-request
    networks:
      proxy-manager-network:

    container_name: proxy-request-service
    restart: unless-stopped

    ports:
      - "3223:3223"
      - "3123:3123"

    env_file:
      - path: ./.env/.env.proxy-request-service
        required: true

    depends_on:
      proxy-request-migrate:
        condition: service_completed_successfully

  proxy-request-migrate:
    image: migrate/migrate:v4.17.1
    networks:
      proxy-manager-network:

    volumes:
      - ./services/proxy-request/migrations:/migrations

    command:
      [
        "-path",
        "migrations",
        "-database",
        "postgres://proxy_manager_user:proxy_manager_password@postgres:5432/proxy_manager_db?sslmode=disable",
        "up",
        "1",
      ]

    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  postgres:
    image: postgres:alpine
    networks:
      proxy-manager-network:

    env_file:
      - path: ./.env/.env.postgres
        required: true

    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "proxy_manager_db"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  proxy-manager-network:
